# Iterable job name
# Compute name
# Latest dataset
# ticker name

# This will probably need to run before all jobs[ data upload upto model registration ]
# This will be scheduled via the cron job


name: job-controller
on:
  # schedule:
  # - cron: ''
  pull-request:
    branches: 
    - "training-automation"

jobs:
  update-configs:
  runs-on: ubuntu-latest
  steps:
  - name: checkout repository
    uses: actions/checkout@v2
  - name: setup python 3.9
    uses: actions/setup-python@v4
    with: 
      python-version: "3.9"
  - name: install python packages
    run: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
  - name: update-scripts
    run: python job_config.py 
    working-directory: config
  - name: push new yml files to github
    run: |
      git config --local user.email "action@github.com"
      git config --local user.name "GitHub Action"
      git add -A
      git commit -m "YAML files updated for different machine-learning tasks."
      git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Add the logic for changing the data upload yaml before this push

  # data-pipeline:

  # runs-on: ubuntu-latest
  # needs: [ update-script ]
  # steps:
  # - name: datadown
  #     run: bash data_pipeline.yml
  # - name: dataup
  #     run: ...

  # model-training:
  # needs: [ update-script, data-pipeline ]
  # runs-on: ubuntu-latest
  # steps:
  # - name: train-model

  # model-registration:
  # needs: [ update-script, data-pipeline, train-pipeline ]
  # runs-on: ubuntu-latest
  # steps:
  # - name: register-model
  #   run: bash register_model.yml

  # score-model:
  # needs: [ update-script, data-pipeline, train-pipeline, model-registration]
  # runs-on: ubuntu-latest
  # steps:
  # - name: score-model
  #   run: bash score_model.yml

  # deploy-model:
  # needs: [ update-script, data-pipeline, train-pipeline, model-registration, score-model]
  # runs-on: ubuntu-latest
  # steps:
  # - name: deploy-model
  #   run: bash deploy_model.yml
   

  

